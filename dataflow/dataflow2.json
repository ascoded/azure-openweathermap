{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json2",
						"type": "DatasetReference"
					},
					"name": "AirPollData"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as double, no as double, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> AirPollData",
				"AirPollData foldDown(unroll(list),",
				"     mapColumn(",
				"          lon = coord.lon,",
				"          lat = coord.lat,",
				"          aqi = list.main.aqi,",
				"          co = list.components.co,",
				"          no = list.components.no,",
				"          no2 = list.components.no2,",
				"          o3 = list.components.o3,",
				"          so2 = list.components.so2,",
				"          pm2_5 = list.components.pm2_5,",
				"          pm10 = list.components.pm10,",
				"          nh3 = list.components.nh3,",
				"          dt = list.dt",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(corrected_timestamp = iif(length(toString(dt)) == 10, toInteger(dt), toInteger(null())),",
				"          location = \"Boston\") ~> derivedColumn1",
				"derivedColumn1 filter(!isNull(aqi) && !isNull(dt)",
				") ~> filter1",
				"filter1 derive(corrected_timestamp = toTimestamp(toLong(corrected_timestamp) * 1000),",
				"          id = concat(location, toString(corrected_timestamp)),",
				"          co = round(co, 2),",
				"          no = round(no, 2),",
				"          no2 = round(no2, 2),",
				"          o3 = round(o3, 2),",
				"          so2 = round(so2, 2),",
				"          pm2_5 = round(pm2_5, 2),",
				"          pm10 = round(pm10, 2),",
				"          nh3 = round(nh3, 2)) ~> derivedColumn2"
			]
		}
	}
}